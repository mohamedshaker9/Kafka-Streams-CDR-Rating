/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cdr;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RatedCDR extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3615800033441152743L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RatedCDR\",\"namespace\":\"com.cdr\",\"fields\":[{\"name\":\"cdrID\",\"type\":\"int\"},{\"name\":\"MSISDN_A\",\"type\":\"string\"},{\"name\":\"MSISDN_B\",\"type\":\"string\"},{\"name\":\"callTime\",\"type\":\"long\"},{\"name\":\"durationInSeconds\",\"type\":\"int\"},{\"name\":\"serviceName\",\"type\":\"string\",\"default\":\"sameOperatorCall\"},{\"name\":\"rate\",\"type\":{\"type\":\"bytes\",\"scale\":3,\"precision\":10,\"logicalType\":\"decimal\"}},{\"name\":\"quantityTypeID\",\"type\":\"int\"},{\"name\":\"isBilled\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<RatedCDR> ENCODER =
      new BinaryMessageEncoder<RatedCDR>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RatedCDR> DECODER =
      new BinaryMessageDecoder<RatedCDR>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RatedCDR> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RatedCDR> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RatedCDR> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RatedCDR>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RatedCDR to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RatedCDR from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RatedCDR instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RatedCDR fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int cdrID;
  private java.lang.CharSequence MSISDN_A;
  private java.lang.CharSequence MSISDN_B;
  private long callTime;
  private int durationInSeconds;
  private java.lang.CharSequence serviceName;
  private java.nio.ByteBuffer rate;
  private int quantityTypeID;
  private int isBilled;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RatedCDR() {}

  /**
   * All-args constructor.
   * @param cdrID The new value for cdrID
   * @param MSISDN_A The new value for MSISDN_A
   * @param MSISDN_B The new value for MSISDN_B
   * @param callTime The new value for callTime
   * @param durationInSeconds The new value for durationInSeconds
   * @param serviceName The new value for serviceName
   * @param rate The new value for rate
   * @param quantityTypeID The new value for quantityTypeID
   * @param isBilled The new value for isBilled
   */
  public RatedCDR(java.lang.Integer cdrID, java.lang.CharSequence MSISDN_A, java.lang.CharSequence MSISDN_B, java.lang.Long callTime, java.lang.Integer durationInSeconds, java.lang.CharSequence serviceName, java.nio.ByteBuffer rate, java.lang.Integer quantityTypeID, java.lang.Integer isBilled) {
    this.cdrID = cdrID;
    this.MSISDN_A = MSISDN_A;
    this.MSISDN_B = MSISDN_B;
    this.callTime = callTime;
    this.durationInSeconds = durationInSeconds;
    this.serviceName = serviceName;
    this.rate = rate;
    this.quantityTypeID = quantityTypeID;
    this.isBilled = isBilled;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cdrID;
    case 1: return MSISDN_A;
    case 2: return MSISDN_B;
    case 3: return callTime;
    case 4: return durationInSeconds;
    case 5: return serviceName;
    case 6: return rate;
    case 7: return quantityTypeID;
    case 8: return isBilled;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cdrID = (java.lang.Integer)value$; break;
    case 1: MSISDN_A = (java.lang.CharSequence)value$; break;
    case 2: MSISDN_B = (java.lang.CharSequence)value$; break;
    case 3: callTime = (java.lang.Long)value$; break;
    case 4: durationInSeconds = (java.lang.Integer)value$; break;
    case 5: serviceName = (java.lang.CharSequence)value$; break;
    case 6: rate = (java.nio.ByteBuffer)value$; break;
    case 7: quantityTypeID = (java.lang.Integer)value$; break;
    case 8: isBilled = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'cdrID' field.
   * @return The value of the 'cdrID' field.
   */
  public int getCdrID() {
    return cdrID;
  }


  /**
   * Sets the value of the 'cdrID' field.
   * @param value the value to set.
   */
  public void setCdrID(int value) {
    this.cdrID = value;
  }

  /**
   * Gets the value of the 'MSISDN_A' field.
   * @return The value of the 'MSISDN_A' field.
   */
  public java.lang.CharSequence getMSISDNA() {
    return MSISDN_A;
  }


  /**
   * Sets the value of the 'MSISDN_A' field.
   * @param value the value to set.
   */
  public void setMSISDNA(java.lang.CharSequence value) {
    this.MSISDN_A = value;
  }

  /**
   * Gets the value of the 'MSISDN_B' field.
   * @return The value of the 'MSISDN_B' field.
   */
  public java.lang.CharSequence getMSISDNB() {
    return MSISDN_B;
  }


  /**
   * Sets the value of the 'MSISDN_B' field.
   * @param value the value to set.
   */
  public void setMSISDNB(java.lang.CharSequence value) {
    this.MSISDN_B = value;
  }

  /**
   * Gets the value of the 'callTime' field.
   * @return The value of the 'callTime' field.
   */
  public long getCallTime() {
    return callTime;
  }


  /**
   * Sets the value of the 'callTime' field.
   * @param value the value to set.
   */
  public void setCallTime(long value) {
    this.callTime = value;
  }

  /**
   * Gets the value of the 'durationInSeconds' field.
   * @return The value of the 'durationInSeconds' field.
   */
  public int getDurationInSeconds() {
    return durationInSeconds;
  }


  /**
   * Sets the value of the 'durationInSeconds' field.
   * @param value the value to set.
   */
  public void setDurationInSeconds(int value) {
    this.durationInSeconds = value;
  }

  /**
   * Gets the value of the 'serviceName' field.
   * @return The value of the 'serviceName' field.
   */
  public java.lang.CharSequence getServiceName() {
    return serviceName;
  }


  /**
   * Sets the value of the 'serviceName' field.
   * @param value the value to set.
   */
  public void setServiceName(java.lang.CharSequence value) {
    this.serviceName = value;
  }

  /**
   * Gets the value of the 'rate' field.
   * @return The value of the 'rate' field.
   */
  public java.nio.ByteBuffer getRate() {
    return rate;
  }


  /**
   * Sets the value of the 'rate' field.
   * @param value the value to set.
   */
  public void setRate(java.nio.ByteBuffer value) {
    this.rate = value;
  }

  /**
   * Gets the value of the 'quantityTypeID' field.
   * @return The value of the 'quantityTypeID' field.
   */
  public int getQuantityTypeID() {
    return quantityTypeID;
  }


  /**
   * Sets the value of the 'quantityTypeID' field.
   * @param value the value to set.
   */
  public void setQuantityTypeID(int value) {
    this.quantityTypeID = value;
  }

  /**
   * Gets the value of the 'isBilled' field.
   * @return The value of the 'isBilled' field.
   */
  public int getIsBilled() {
    return isBilled;
  }


  /**
   * Sets the value of the 'isBilled' field.
   * @param value the value to set.
   */
  public void setIsBilled(int value) {
    this.isBilled = value;
  }

  /**
   * Creates a new RatedCDR RecordBuilder.
   * @return A new RatedCDR RecordBuilder
   */
  public static com.cdr.RatedCDR.Builder newBuilder() {
    return new com.cdr.RatedCDR.Builder();
  }

  /**
   * Creates a new RatedCDR RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RatedCDR RecordBuilder
   */
  public static com.cdr.RatedCDR.Builder newBuilder(com.cdr.RatedCDR.Builder other) {
    if (other == null) {
      return new com.cdr.RatedCDR.Builder();
    } else {
      return new com.cdr.RatedCDR.Builder(other);
    }
  }

  /**
   * Creates a new RatedCDR RecordBuilder by copying an existing RatedCDR instance.
   * @param other The existing instance to copy.
   * @return A new RatedCDR RecordBuilder
   */
  public static com.cdr.RatedCDR.Builder newBuilder(com.cdr.RatedCDR other) {
    if (other == null) {
      return new com.cdr.RatedCDR.Builder();
    } else {
      return new com.cdr.RatedCDR.Builder(other);
    }
  }

  /**
   * RecordBuilder for RatedCDR instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RatedCDR>
    implements org.apache.avro.data.RecordBuilder<RatedCDR> {

    private int cdrID;
    private java.lang.CharSequence MSISDN_A;
    private java.lang.CharSequence MSISDN_B;
    private long callTime;
    private int durationInSeconds;
    private java.lang.CharSequence serviceName;
    private java.nio.ByteBuffer rate;
    private int quantityTypeID;
    private int isBilled;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cdr.RatedCDR.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cdrID)) {
        this.cdrID = data().deepCopy(fields()[0].schema(), other.cdrID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.MSISDN_A)) {
        this.MSISDN_A = data().deepCopy(fields()[1].schema(), other.MSISDN_A);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.MSISDN_B)) {
        this.MSISDN_B = data().deepCopy(fields()[2].schema(), other.MSISDN_B);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.callTime)) {
        this.callTime = data().deepCopy(fields()[3].schema(), other.callTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.durationInSeconds)) {
        this.durationInSeconds = data().deepCopy(fields()[4].schema(), other.durationInSeconds);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[5].schema(), other.serviceName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.rate)) {
        this.rate = data().deepCopy(fields()[6].schema(), other.rate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.quantityTypeID)) {
        this.quantityTypeID = data().deepCopy(fields()[7].schema(), other.quantityTypeID);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.isBilled)) {
        this.isBilled = data().deepCopy(fields()[8].schema(), other.isBilled);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing RatedCDR instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cdr.RatedCDR other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.cdrID)) {
        this.cdrID = data().deepCopy(fields()[0].schema(), other.cdrID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MSISDN_A)) {
        this.MSISDN_A = data().deepCopy(fields()[1].schema(), other.MSISDN_A);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MSISDN_B)) {
        this.MSISDN_B = data().deepCopy(fields()[2].schema(), other.MSISDN_B);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.callTime)) {
        this.callTime = data().deepCopy(fields()[3].schema(), other.callTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.durationInSeconds)) {
        this.durationInSeconds = data().deepCopy(fields()[4].schema(), other.durationInSeconds);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[5].schema(), other.serviceName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.rate)) {
        this.rate = data().deepCopy(fields()[6].schema(), other.rate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.quantityTypeID)) {
        this.quantityTypeID = data().deepCopy(fields()[7].schema(), other.quantityTypeID);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isBilled)) {
        this.isBilled = data().deepCopy(fields()[8].schema(), other.isBilled);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'cdrID' field.
      * @return The value.
      */
    public int getCdrID() {
      return cdrID;
    }


    /**
      * Sets the value of the 'cdrID' field.
      * @param value The value of 'cdrID'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setCdrID(int value) {
      validate(fields()[0], value);
      this.cdrID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cdrID' field has been set.
      * @return True if the 'cdrID' field has been set, false otherwise.
      */
    public boolean hasCdrID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'cdrID' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearCdrID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MSISDN_A' field.
      * @return The value.
      */
    public java.lang.CharSequence getMSISDNA() {
      return MSISDN_A;
    }


    /**
      * Sets the value of the 'MSISDN_A' field.
      * @param value The value of 'MSISDN_A'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setMSISDNA(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.MSISDN_A = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MSISDN_A' field has been set.
      * @return True if the 'MSISDN_A' field has been set, false otherwise.
      */
    public boolean hasMSISDNA() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'MSISDN_A' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearMSISDNA() {
      MSISDN_A = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'MSISDN_B' field.
      * @return The value.
      */
    public java.lang.CharSequence getMSISDNB() {
      return MSISDN_B;
    }


    /**
      * Sets the value of the 'MSISDN_B' field.
      * @param value The value of 'MSISDN_B'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setMSISDNB(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.MSISDN_B = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'MSISDN_B' field has been set.
      * @return True if the 'MSISDN_B' field has been set, false otherwise.
      */
    public boolean hasMSISDNB() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'MSISDN_B' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearMSISDNB() {
      MSISDN_B = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'callTime' field.
      * @return The value.
      */
    public long getCallTime() {
      return callTime;
    }


    /**
      * Sets the value of the 'callTime' field.
      * @param value The value of 'callTime'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setCallTime(long value) {
      validate(fields()[3], value);
      this.callTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'callTime' field has been set.
      * @return True if the 'callTime' field has been set, false otherwise.
      */
    public boolean hasCallTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'callTime' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearCallTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'durationInSeconds' field.
      * @return The value.
      */
    public int getDurationInSeconds() {
      return durationInSeconds;
    }


    /**
      * Sets the value of the 'durationInSeconds' field.
      * @param value The value of 'durationInSeconds'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setDurationInSeconds(int value) {
      validate(fields()[4], value);
      this.durationInSeconds = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'durationInSeconds' field has been set.
      * @return True if the 'durationInSeconds' field has been set, false otherwise.
      */
    public boolean hasDurationInSeconds() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'durationInSeconds' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearDurationInSeconds() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceName' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceName() {
      return serviceName;
    }


    /**
      * Sets the value of the 'serviceName' field.
      * @param value The value of 'serviceName'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setServiceName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.serviceName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceName' field has been set.
      * @return True if the 'serviceName' field has been set, false otherwise.
      */
    public boolean hasServiceName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'serviceName' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearServiceName() {
      serviceName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'rate' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getRate() {
      return rate;
    }


    /**
      * Sets the value of the 'rate' field.
      * @param value The value of 'rate'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setRate(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.rate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'rate' field has been set.
      * @return True if the 'rate' field has been set, false otherwise.
      */
    public boolean hasRate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'rate' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearRate() {
      rate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantityTypeID' field.
      * @return The value.
      */
    public int getQuantityTypeID() {
      return quantityTypeID;
    }


    /**
      * Sets the value of the 'quantityTypeID' field.
      * @param value The value of 'quantityTypeID'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setQuantityTypeID(int value) {
      validate(fields()[7], value);
      this.quantityTypeID = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'quantityTypeID' field has been set.
      * @return True if the 'quantityTypeID' field has been set, false otherwise.
      */
    public boolean hasQuantityTypeID() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'quantityTypeID' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearQuantityTypeID() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'isBilled' field.
      * @return The value.
      */
    public int getIsBilled() {
      return isBilled;
    }


    /**
      * Sets the value of the 'isBilled' field.
      * @param value The value of 'isBilled'.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder setIsBilled(int value) {
      validate(fields()[8], value);
      this.isBilled = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'isBilled' field has been set.
      * @return True if the 'isBilled' field has been set, false otherwise.
      */
    public boolean hasIsBilled() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'isBilled' field.
      * @return This builder.
      */
    public com.cdr.RatedCDR.Builder clearIsBilled() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RatedCDR build() {
      try {
        RatedCDR record = new RatedCDR();
        record.cdrID = fieldSetFlags()[0] ? this.cdrID : (java.lang.Integer) defaultValue(fields()[0]);
        record.MSISDN_A = fieldSetFlags()[1] ? this.MSISDN_A : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.MSISDN_B = fieldSetFlags()[2] ? this.MSISDN_B : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.callTime = fieldSetFlags()[3] ? this.callTime : (java.lang.Long) defaultValue(fields()[3]);
        record.durationInSeconds = fieldSetFlags()[4] ? this.durationInSeconds : (java.lang.Integer) defaultValue(fields()[4]);
        record.serviceName = fieldSetFlags()[5] ? this.serviceName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.rate = fieldSetFlags()[6] ? this.rate : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.quantityTypeID = fieldSetFlags()[7] ? this.quantityTypeID : (java.lang.Integer) defaultValue(fields()[7]);
        record.isBilled = fieldSetFlags()[8] ? this.isBilled : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RatedCDR>
    WRITER$ = (org.apache.avro.io.DatumWriter<RatedCDR>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RatedCDR>
    READER$ = (org.apache.avro.io.DatumReader<RatedCDR>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










